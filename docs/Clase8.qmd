<<<<<<< HEAD
---
title: "Clase 8- Uso de Unmarked: Estimación de abundancia por transecto"
format: html
editor: visual
---

En esta clase, exploraremos el uso de Unmarked para modelar la abundancia de especies a partir de datos recopilados mediante trasectos. Desde los fundamentos, explicaremos paso a paso cómo utilizar este paquete, cubriendo el proceso completo: desde el ajuste inicial del modelo hasta la selección, validación e interpretación de los resultados. También abordaremos la presentación de los datos para su inclusión en publicaciones científicas, asegurando un entendimiento completo y la capacidad de aplicar estos modelos de manera efectiva en contextos de investigación y divulgación científica.

Cargar paquete

```{r, warning=FALSE, message=FALSE}
library(unmarked)
library(tidyverse)
library(AICcmodavg)
```

Cargar base de datos

```{r}
library(readxl)

AvesTransecto <- read_excel("data/Transectos.xlsx", sheet = 2)
AvesTransecto <- read.delim("data/Transectos.txt")
```

::: panel-tabset

## Procesar base de datos

```{r}
AvesTransectoLimpia <- AvesTransecto %>% 
  filter(!is.na(Hora_I))
```

Observar que ave cuenta con mayor cantidad de observaciones

```{r}
head(AvesTransectoLimpia %>% 
  group_by(Especie) %>% 
  count() %>% 
  arrange(desc(n)))
```

Filtrar algunas especies insectivoras

```{r}
Insectivoras <- AvesTransectoLimpia %>% 
  filter(Especie %in% c("CARPUS", "SETCIT", "SETVIR", "TROAED", "BASCUL", "MIOOLE",
                        "SETPET", "BASRUF", "MNIVAR", "OREPER", "MYOMIN", "SETPEN", "SETRUT",
                        "VERCHR", "VERCYA"))

head(Insectivoras)

table(Insectivoras$Distancia)
```
Crear intervalos de distancias


```{r}

Insectivoras2 <- Insectivoras %>%
  mutate(Distance_Level = cut(Distancia, breaks = c(0, 10, 15, 20, 25, 35), 
                              labels = c("Level1", "Level2", "Level3", "Level4", "Level5")))

table(Insectivoras2$Distance_Level)

```
Obtener valores de abundancia por Nivel de distancia

```{r}
Insectivoras3 <- Insectivoras2 %>% 
  group_by(Sitio, Fecha, Visita, Hora_I, Hora_F, Observador, Distance_Level) %>% 
  summarise(Abundacia = n() ) 
  

Insectivoras4 <- Insectivoras3 %>% 
  pivot_wider(names_from = Distance_Level, values_from = Abundacia, values_fill = 0) %>% 
  select(Sitio, Fecha, Visita, Hora_I, Hora_F, Observador, 
         Level1, Level2, Level3, Level4, Level5) %>% 
  mutate(Fecha = dmy(Fecha)) %>%
  mutate(FechaOrd = yday(Fecha))
```
## Prepara data en formato unmarked

```{r}
y <- cbind(Insectivoras4$Level1, Insectivoras4$Level2,
           Insectivoras4$Level3, Insectivoras4$Level4,
           Insectivoras4$Level5)

SiteCovs <- Insectivoras4[,c(4,12)]

Insectivoras4$Longitud <- c(100)

InsectivorasUMF <- unmarkedFrameDS(y= y ,
                                   siteCovs = SiteCovs,
                                   dist.breaks = seq(0, 35, by= 6),
                                   survey = "line",
                                   unitsIn = "m",
                                   tlength = Insectivoras4$Longitud)
```


## Fit model

```{r}
fmp1 <- distsamp(~ 1 ~ 1, InsectivorasUMF)

fmp2 <- distsamp(~ 1 ~ FechaOrd, keyfun = "halfnorm", output = "density", unitsOut = "ha",  InsectivorasUMF)

fmp3 <- distsamp(~ 1 ~ FechaOrd, keyfun = "hazard", output = "density", unitsOut = "ha", InsectivorasUMF)

fmp4 <- distsamp(~ 1 ~ FechaOrd, keyfun = "exp", output = "density", unitsOut = "ha", InsectivorasUMF)

fmp5 <- distsamp(~ 1 ~ FechaOrd, keyfun = "uniform", output = "density", unitsOut = "ha", InsectivorasUMF)

fmp6 <- distsamp(~ 1 ~ FechaOrd + I(FechaOrd^2), keyfun = "exp", output = "density", unitsOut = "ha", InsectivorasUMF)


```
## Seleccionar modelo mas adecuado

```{r}
Modelos <- list(fmp1, fmp2, fmp3, fmp4, fmp5, fmp6)
Nombres <- c("fmp1", "fmp2", "fmp3", "fmp4", "fmp5", "fmp6")

aictab(Modelos, Nombres, sort = TRUE)

```
## Validar modelo

```{r, warning=FALSE, message=FALSE}

fitstats <- function(Mod_global2) {
  observed <- getY(Mod_global2@data)
  expected <- fitted(Mod_global2)
  resids <- residuals(Mod_global2)
  sse <- sum(resids^2,na.rm=TRUE)
  chisq <- sum((observed - expected)^2 / expected,na.rm=TRUE)
  freeTuke <- sum((sqrt(observed) - sqrt(expected))^2,na.rm=TRUE)
  out <- c(SSE=sse, Chisq=chisq, freemanTukey=freeTuke)
  return(out)
}

(pb <- parboot(fmp4, fitstats, nsim=100, report=1))

cHat_pb <- pb@t0[2] / mean(pb@t.star[,2])


MigGOF <- Nmix.gof.test(fmp4, nsim = 100, report = 3)
```


## Revisar resultados

```{r}
summary(fmp4)
confint(fmp4, type = "state", level= 0.95)

exp(coef(fmp4, type="state", altNames=TRUE))

hist(fmp4, ylim = c(0, 0.1), xlab="Distance (m)")	# Only works when there are no det covars
```

## Prepara para graficar

```{r}
FechaOrd <- data.frame(FechaOrd = seq(min(Insectivoras4$FechaOrd, na.rm = TRUE), max(Insectivoras4$FechaOrd, na.rm = TRUE), length.out = 100))

FechaOrd_pre <- predict(fmp4, newdata = FechaOrd, type = "state")

FechaOrd_pre$FechaOrd <- FechaOrd$FechaOrd
```

## Graficar

```{r}
ggplot(data = FechaOrd_pre, aes(x= FechaOrd, y= Predicted))+
  geom_ribbon(aes(ymin = lower, ymax= upper),
              fill = "lightblue", alpha = 0.4)+
  geom_line()+
  labs(title = "Abundancia de Insectivoros versus fecha")+
  theme_classic()
```


:::

![HN Biology Investigation Academy](HN Cursos publicidad/HN Biology Inv large.jpg)

